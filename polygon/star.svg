<svg xmlns="http://www.w3.org/2000/svg" viewBox="-120 -120 240 240" preserveAspectRatio="xMidYMid meet" onload="load()">

	<script>
		<![CDATA[

		function load() {
			let starPath = getStarPath();
			//console.log(starPath);
			document.getElementById('star').setAttribute('d',starPath);
		}

		function getStarPath(number) {

			let path = '';
			let angle = 0, x = 0, y = 0;
			const sides = 4;
			const divisions = 3;

			const tau = 2 * Math.PI;

			const mainAngle = tau / sides;

			const internalAngle = mainAngle / divisions;

			const points = sides * divisions;

			const length = 30;


			for (let i=0; i < points; i++)
			{
				angle += Math.PI - i*internalAngle;
				console.log(angle,x,y);
				x = length * Math.sin(angle);
				y = length * Math.cos(angle);

				path  += (i===0) ? `M ${x} ${y} ` : `L ${x} ${y} `;
			}

			return `${path} Z`;
		}
		// ]]>
	</script>

	<style>
		path {
			stroke: red;
			stroke-width: 1;
			fill: pink;
			fill-rule: evenodd; <!-- nonzero -->
			stroke-dasharray: 2 7;
			stroke-linecap: round;
			stroke-linejoin: bevel;
			marker-start:url(#markerStart);
			marker-end:url(#markerEnd);
		}
		marker { stroke-width:.5; }
		.marker-start  { fill:lightgreen ; stroke:green }
		.marker-end    { fill:pink ; stroke:red }
	</style>

	<rect x="-120" y="-120" width="240" height="240" fill="silver"/>

	<defs>
		<marker id="markerStart" markerWidth="10" markerHeight="10" refX="5" refY="5">
			<circle class="marker-start" cx="5" cy="5" r="3"/>
		</marker>
		<marker id="markerEnd" markerWidth="10" markerHeight="10" refX="5" refY="5">
			<rect class="marker-end" x="4" y="4" width="2" height="2"/>
		</marker>

	</defs>


	<path id="star" d=""/>

</svg>